document.getElementById('results').innerHTML = "";

document.querySelector('#results').insertAdjacentHTML("afterbegin", "<%= j (render partial: './partials/results') %>") ;

var arrData = [];

$(document).ready(function() {
    $(".selectpicker").selectpicker("refresh");
    $('select').attr('disabled', true);//disables select options

     function upsert(array, item) { // (1)
        const i = array.findIndex(_item => _item.id === item.id);
        if (i > -1) array[i] = item; // (2)
        else array.push(item);
        console.log(arrData);
      }

$(document).on('click','.checkBoxClass',function () {
    // Delete object when unchecked
    if($(this). prop('checked') == false){
        var gameObject_id = $(this).closest('tr').find('td:eq(1)').text().replace(/[\W_]/g, '');
        arrData = arrData.filter(item => item.id !== gameObject_id);
        console.log(arrData);
    }

    if($(this).prop('checked') == true) {
        $(this).closest('tr').find('select').attr('disabled', false); //makes select options enabled again
        var gameObject = {};
        gameObject.id = $(this).closest('tr').find('td:eq(1)').text().replace(/[\W_]/g, '');
        gameObject.name = $(this).closest('tr').find('td:eq(3)').text().replace(/[\r\n]+/g, ' ').trim();
        gameObject.date = $(this).closest('tr').find('td:eq(4)').text().replace(/[\r\n]+/g, ' ').trim();

        $(this).closest( 'tr').find('.platformSelector').change(function() {
            var gamePlatforms = [];
            $(this).find('.platformSelector option:selected').toArray().map(function(item){ 
                var newObj = {};
                newObj.id = item.dataset.object;
                newObj.platform = item.text;
                gamePlatforms.push(newObj);
            }
            ).join();
            gameObject.platform = gamePlatforms;
            upsert(arrData, gameObject);
        });

        $(this).closest('tr').find('.storeSelector').change(function(){
            var gameStores = [];
            $(this).find(".storeSelector option:selected").toArray().map(function (item) {
                     var newObj = {};
                     newObj.id = item.dataset.object;
                     newObj.store = item.text;
                     gameStores.push(newObj);
              }).join();
              gameObject.stores = gameStores;
        });
        }
    });
});

var saveGames = function (){
    console.log(arrData);
    const csrf = document.querySelector("meta[name='csrf-token']").getAttribute("content");

    $.ajax({
        headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': csrf
          },
        url: "/create",
        type: "POST",
        data: {"game_data" : arrData},
        dataType: "json",
        success: function(response) {
            alert('successfully');
          },
        error: function(error){
            console.log(error.responseText);
          }
        });
        

    'home#create'
}